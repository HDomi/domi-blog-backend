name: Deploy blog_backend to NAS Server

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  SERVER_DOCKER_IMG_NAME: h-domi-blog-backend # 여기에 실제 이미지 이름을 입력하세요
  SERVER_NAME: domi-blog-backend # 여기에 실제 서버 이름을 입력하세요

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH connection
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # GitHub Secrets에 SSH 키를 저장하세요

      - name: Build and Deploy Docker Image
        run: |
          ssh -vvv -o StrictHostKeyChecking=no ${{ secrets.NAS_USER }}@${{ secrets.NAS_IP }} -p ${{ secrets.NAS_PORT }} << 'EOF'
            cd /volume1/docker/backend
            rm -rf ${{ env.SERVER_NAME }}
            mkdir ${{ env.SERVER_NAME }}
            git clone -b main --single-branch https://github.com/HDomi/domi-blog-backend.git
            cd ${{ env.SERVER_NAME }}
            docker stop ${{ env.SERVER_DOCKER_IMG_NAME }} || true
            docker rm ${{ env.SERVER_DOCKER_IMG_NAME }} || true
            sleep 30
            docker build --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} --build-arg DB_USER=${{ secrets.DB_USER }} --build-arg DB_PWD=${{ secrets.DB_PWD }} --build-arg DB_HOST=${{ secrets.DB_HOST }} --build-arg DB_PORT=${{ secrets.DB_PORT }} --build-arg DB_NAME=${{ secrets.DB_NAME }} -t ${{ env.SERVER_DOCKER_IMG_NAME }}:latest -f Dockerfile . && \
            docker run -e SECRET_KEY=${{ secrets.SECRET_KEY }} -e DB_USER=${{ secrets.DB_USER }} -e DB_PWD=${{ secrets.DB_PWD }} -e DB_HOST=${{ secrets.DB_HOST }} -e DB_PORT=${{ secrets.DB_PORT }} -e DB_NAME=${{ secrets.DB_NAME }} -d --name ${{ env.SERVER_DOCKER_IMG_NAME }} -p 3308:3308 ${{ env.SERVER_DOCKER_IMG_NAME }}:latest
          EOF
